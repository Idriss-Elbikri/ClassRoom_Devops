trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  artifactName: 'drop'
  warFileName: 'ClassRoom.war'

steps:
# âœ… Checkout du code
- checkout: self

# ðŸ”§ Compilation avec Maven (et Java 17 dÃ©jÃ  installÃ© par Azure DevOps)
- task: Maven@4
  displayName: 'ðŸ”§ Build avec Maven'
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean package'
    mavenOptions: >
      -Xmx1024m 
      --add-opens java.base/java.util=ALL-UNNAMED 
      --add-opens java.base/java.lang=ALL-UNNAMED 
      --add-opens java.base/java.lang.reflect=ALL-UNNAMED 
      --add-opens java.base/java.text=ALL-UNNAMED 
      --add-opens java.desktop/java.awt.font=ALL-UNNAMED
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '17'
    publishJUnitResults: false

# ðŸ“¦ Copier le fichier WAR
- task: CopyFiles@2
  displayName: 'ðŸ“¦ Copier le fichier WAR'
  inputs:
    contents: '**/target/*.war'
    targetFolder: '$(Build.ArtifactStagingDirectory)'

# ðŸ“¤ Publier l'artefact WAR pour la Release pipeline
- task: PublishBuildArtifacts@1
  displayName: 'ðŸ“¤ Publier Artefact .war'
  inputs:
    pathToPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: '$(artifactName)'
